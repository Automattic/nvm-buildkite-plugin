#!/bin/bash

set -euo pipefail

echo "~~~ :node: Installing nvm"

[[ -f .nvmrc || -n "${BUILDKITE_PLUGIN_NVM_VERSION:-}" ]] || {
    echo "No .nvmrc or Node.js version specified, skipping nvm installation"
    return
}

[[ -z "${IS_VM_HOST:-}" ]] || {
    echo "No need to install nvm on the host, skipping nvm installation"
    return
}

# Use a deterministic directory path based on BUILDKITE_JOB_ID
NVM_DIR="${TMPDIR:-/tmp}/automattic-nvm-${BUILDKITE_JOB_ID}"
mkdir -p "$NVM_DIR"

# Make sure the path is a real path, to support scripts in macOS that source $NVM_DIR.
# More details at https://github.com/Automattic/nvm-buildkite-plugin/pull/9
NVM_DIR=$(readlink -fn "$NVM_DIR")
export NVM_DIR

# Pass the user specified .curlrc file content to all curl commands.
original_curl_home="${CURL_HOME:-}"
if [[ -n ${BUILDKITE_PLUGIN_NVM_CURLRC:-} ]]; then
    export CURL_HOME="$NVM_DIR"
    echo "${BUILDKITE_PLUGIN_NVM_CURLRC}" > "$CURL_HOME/.curlrc"
fi

echo "Installing nvm in $NVM_DIR"

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | PROFILE=/dev/null bash

# shellcheck source=/dev/null
source "$NVM_DIR/nvm.sh" --no-use

echo "~~~ :node: Installing Node.js"
install_args=("--no-progress")
if [[ -n ${BUILDKITE_PLUGIN_NVM_VERSION:-} ]]; then
    echo "Installing Node.js version ${BUILDKITE_PLUGIN_NVM_VERSION}"
    install_args+=("${BUILDKITE_PLUGIN_NVM_VERSION}")
else
    echo "Installing Node.js version specified in the .nvmrc file"
fi
nvm install "${install_args[@]}"

echo "~~~ :node: Activating Node.js"
if [[ -n ${BUILDKITE_PLUGIN_NVM_VERSION:-} ]]; then
    nvm use "${BUILDKITE_PLUGIN_NVM_VERSION}"
else
    nvm use
fi

echo "Verifying that Node.js (version $(node --version)) can be used..."
test "$(echo 'console.log("Hello Node.js")' | node -)" == "Hello Node.js"

# Reset or remove CURL_HOME env var
unset CURL_HOME
if [[ -n ${original_curl_home:-} ]]; then
    export CURL_HOME="${original_curl_home}"
fi

echo "Node.js and nvm successfully set up."
